@inherits LayoutComponentBase
@inject ISnackbar Snackbar
@inject IJSRuntime JS

<!-- Theme + providers -->
<MudThemeProvider Theme="@Themes.MinimalistTheme" @bind-IsDarkMode="_isDark" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>

    <!-- DESKTOP: MdAndUp — mini left drawer, no app bar -->
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <MudDrawer Variant="DrawerVariant.Mini" Elevation="1" Anchor="Anchor.Left">
            <MudNavMenu Dense>
                <MudTooltip Text="Home" Placement="Placement.Right">
                    <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All" />
                </MudTooltip>

                <MudTooltip Text="Runs" Placement="Placement.Right">
                    <MudNavLink Href="/runs" Icon="@Icons.Material.Filled.Description" />
                </MudTooltip>

                <MudTooltip Text="Scenes" Placement="Placement.Right">
                    <MudNavLink Href="/scenes" Icon="@Icons.Material.Filled.ViewWeek" />
                </MudTooltip>

                <MudTooltip Text="Encounters" Placement="Placement.Right">
                    <MudNavLink Href="/encounters" Icon="@Icons.Material.Filled.AutoAwesome" />
                </MudTooltip>

                <MudTooltip Text="Rules" Placement="Placement.Right">
                    <MudNavLink Href="/rules" Icon="@Icons.Material.Filled.MenuBook" />
                </MudTooltip>
            </MudNavMenu>
            <MudSpacer />
            <MudNavMenu Dense>
                <MudIconButton Icon="@(_isDark? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                               Class="m-2"
                               OnClick="@ToggleTheme" />
            </MudNavMenu>
        </MudDrawer>
    </MudHidden>

    <!-- MOBILE: SmAndDown — app bar with hamburger + temporary left drawer -->
    <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudAppBar Elevation="0">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" OnClick="@(() => _leftOpenMobile = true)" />
        </MudAppBar>

        <MudDrawer Anchor="Anchor.Left"
                   Variant="DrawerVariant.Temporary"
                   @bind-Open="@_leftOpenMobile"
                   Elevation="8">
            <MudNavMenu Dense>
                <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All">Home</MudNavLink>
                <MudNavLink Href="/runs" Icon="@Icons.Material.Filled.Description">Runs</MudNavLink>
                <MudNavLink Href="/scenes" Icon="@Icons.Material.Filled.ViewWeek">Scenes</MudNavLink>
                <MudNavLink Href="/encounters" Icon="@Icons.Material.Filled.AutoAwesome">Encounters</MudNavLink>
                <MudNavLink Href="/rules" Icon="@Icons.Material.Filled.MenuBook">Rules</MudNavLink>
            </MudNavMenu>
            <MudSpacer />
            <MudNavMenu Dense>
                <MudIconButton Icon="@(_isDark? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                               Class="m-2"
                               OnClick="@ToggleTheme" />
            </MudNavMenu>
        </MudDrawer>
    </MudHidden>

    <!-- Right rail (unchanged) -->
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <MudDrawer Anchor="Anchor.Right" Variant="DrawerVariant.Persistent" Open="true" Class="ai-drawer">
            <ChatPanel Messages="@_demo" />
        </MudDrawer>
    </MudHidden>

    <MudMainContent>
        @Body

        <!-- Mobile FAB + temporary bottom drawer (unchanged) -->
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudFab StartIcon="@Icons.Material.Filled.Chat" Class="ai-fab" Color="Color.Primary" OnClick="@(() => _mobileOpen = true)" />
            <MudDrawer Anchor="Anchor.Bottom" Variant="DrawerVariant.Temporary" Open="@_mobileOpen"
                       Class="ai-drawer-mobile" Elevation="8">
                <ChatPanel Messages="@_demo" />
            </MudDrawer>
        </MudHidden>
    </MudMainContent>
</MudLayout>

@code {
    private bool _isDark;
    private bool _mobileOpen;
    private bool _leftOpenMobile;

    private readonly List<ChatMessage> _demo = new()
    {
        new("user","Start a new mission in the Redmond Barrens."),
        new("ai","**GM:** Rain turns ash to sludge as neon flickers… *What do you do?*")
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDark = await JS.InvokeAsync<bool>("themeStorage.init");
            StateHasChanged();
        }
    }

    private async Task ToggleTheme()
    {
        _isDark = !_isDark;
        await JS.InvokeVoidAsync("themeStorage.set", _isDark);
    }
}
